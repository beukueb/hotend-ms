{
  "rules": {
    "input_primitives": {
      ".indexOn": "name",
      ".read": true,
      ".write": "root.child('admins/'+auth.uid).exists() && root.child('admins/'+auth.uid).child('role').val().matches(/(admin)/)"
    },
    "input_object_definitions": {
      ".read": true,
      ".write": "root.child('admins/'+auth.uid).exists() && root.child('admins/'+auth.uid).child('role').val().matches(/(admin)/)"
    },
    "input_object_instances": {
      ".read": true,
      ".write": true
    },
    "template_render_functions": {
      ".read": true,
      ".write": "root.child('admins/'+auth.uid).exists() && root.child('admins/'+auth.uid).child('role').val().matches(/(admin)/)"
    },
    "admins": {
      ".indexOn": "email",
      ".write": true,
      ".read": "root.child('admins/'+auth.uid).exists() && root.child('admins/'+auth.uid).child('role').val().matches(/(admin)/)",
      "$uid": {
        ".read": "$uid == auth.uid || root.child('admins/'+auth.uid).exists() || data.child('email').val() == auth.email",
        ".write": "$uid == auth.uid || root.child('admins/'+auth.uid).exists() || data.child('email').val() == auth.email"
      }
    },
    "menus": {
      ".read": true,
      ".write": "root.child('admins/'+auth.uid).exists() && root.child('admins/'+auth.uid).child('role').val().matches(/(admin)/)"
    },
    "theme": {
      ".read": true,
      ".write": "root.child('admins/'+auth.uid).exists() && root.child('admins/'+auth.uid).child('role').val().matches(/(admin)/)"
    },
    "pages": {
      ".read": true,
      ".write": "root.child('admins/'+auth.uid).exists() && root.child('admins/'+auth.uid).child('role').val().matches(/(admin)/)",
      ".indexOn": [
        "rdateUpdated",
        "url"
      ]
    },
    "users": {
      ".read": "root.child('admins/'+auth.uid).exists() && root.child('admins/'+auth.uid).child('role').val().matches(/(admin)/)",
      ".write": true,
      "$uid": {
        ".read": "$uid == auth.uid || root.child('admins/'+auth.uid).exists()",
        ".write": "$uid == auth.uid || root.child('admins/'+auth.uid).exists()"
      }
    },
    "stripe_customers": {
      "$uid": {
        ".read": "$uid == auth.uid",
        "sources": {
          "$chargeId": {
            ".write": "$uid == auth.uid",
            "token": {
              ".validate": "newData.isString()"
            },
            "$other": {
              ".validate": false
            }
          }
        },
        "charges": {
          "$sourceId": {
            ".write": "$uid == auth.uid",
            "source": {
              ".validate": "newData.isString()"
            },
            "amount": {
              ".validate": "newData.isNumber()"
            },
            "$other": {
              ".validate": false
            }
          }
        }
      }
    }
  }
}
